/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
&kp GRAVE         &kp N1     &kp N2  &kp N3     &kp N4  &kp N5                                         &kp N6  &kp N7     &kp N8     &kp N9      &kp N0     &kp BACKSPACE
&kp TAB           &kp Q      &kp W   &kp E      &kp R   &kp T                                          &kp Y   &kp U      &kp I      &kp O       &kp P      &kp BSPC
&kp LEFT_SHIFT    &kp A      &kp S   &kp D      &kp F   &kp G                                          &kp H   &kp J      &kp K      &kp L       &kp SEMI   &kp SQT
&kp LEFT_CONTROL  &kp Z      &kp X   &kp C      &kp V   &kp B         &kp ESCAPE      &kp PRINTSCREEN  &kp N   &kp M      &kp COMMA  &kp PERIOD  &kp SLASH  &kp RET
&kp BACKSPACE     &kp ENTER  &mo 3   &kp SPACE  &mo 2   &kp LEFT_ALT  &kp LEFT_GUI    &mo 1            &none   &kp SPACE  &kp LEFT   &kp DOWN    &kp UP     &kp RIGHT
            >;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
            // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
            // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
            // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
            // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |

            bindings = <
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F10                             &kp F11            &kp F6           &kp F7           &kp F8           &kp F9           &kp F12
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &ext_power EP_TOG  &none            &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG
&bt BT_NXT  &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans        &trans                              &rgb_ug RGB_EFR    &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &none            &none
&bt BT_PRV  &trans        &trans        &trans        &trans        &trans        &kp LBRC    &kp RBRC  &trans             &trans           &trans           &trans           &trans           &to 4
&trans      &trans        &trans        &trans        &trans        &trans        &trans      &trans    &trans             &trans           &trans           &trans           &trans           &trans
            >;
        };

        mirror_layer {
            bindings = <
&trans  &kp N0    &kp N9   &kp N8     &kp N7  &kp N6                     &trans    &trans    &trans        &trans     &trans  &trans
&trans  &kp P     &kp O    &kp I      &kp U   &kp Y                      &trans    &trans    &trans        &trans     &trans  &trans
&trans  &kp SEMI  &kp L    &kp K      &kp J   &kp H                      &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &kp FSLH  &kp DOT  &kp COMMA  &kp M   &kp N   &kp DEL    &trans  &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans    &trans   &trans     &trans  &trans  &trans     &trans  &trans    &trans    &trans        &trans     &trans  &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans  &trans         &trans         &trans    &trans           &trans                                               &trans             &trans     &trans      &trans         &kp PLUS          &kp EQUAL
&trans  &trans         &trans         &trans    &trans           &trans                                               &trans             &trans     &trans      &trans         &trans            &trans
&trans  &trans         &trans         &trans    &trans           &trans                                               &trans             &trans     &trans      &trans         &trans            &trans
&trans  &kp LESS_THAN  &kp BACKSLASH  &kp PIPE  &kp KP_SUBTRACT  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp UNDER  &kp PERIOD  &kp KP_DIVIDE  &kp GREATER_THAN  &trans
&trans  &trans         &trans         &trans    &trans           &trans            &trans            &trans           &trans             &trans     &trans      &trans         &trans            &trans
            >;
        };

        steno_layer {
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0    &kp MINUS
&none  &kp Q   &kp W   &kp E   &kp R   &kp T                   &kp Y   &kp U   &kp I   &kp O   &kp P     &kp LBKT
&none  &kp A   &kp S   &kp D   &kp F   &kp G                   &kp H   &kp J   &kp K   &kp L   &kp SEMI  &kp APOS
&none  &none   &none   &none   &none   &none   &none    &none  &none   &none   &none   &none   &none     &none
&none  &none   &none   &none   &kp C   &kp V   &none    &none  &kp N   &kp M   &none   &none   &none     &to 0
            >;
        };
    };
};
